#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (0, 0, 50000)
                double radius = 500
            }
            dictionary Perspective = {
                double3 position = (2.3854245040755804, 2.185424471293027, 1.185424426589541)
                double3 target = (0.6000000387430191, 0.4000000059604645, -0.6000000387430191)
            }
            dictionary Right = {
                double3 position = (-50000, 0, -1.1102230246251565e-11)
                double radius = 500
            }
            dictionary Top = {
                double3 position = (-4.329849557662997e-12, 50000.80000001192, 1.1102407881938152e-11)
                double radius = 500
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
    }
    defaultPrim = "Root"
    doc = """Generated from Composed Stage of root layer C:\\Users\\JJGIV\\OneDrive\\Documents\\goBildaLibrary\\1103_LBeam\\usdFiles\\_1103_0008.usdc
"""
    metersPerUnit = 0.01
    upAxis = "Y"
)

def Xform "Root"
{
    def Xform "_103_0001_0008" (
        instanceable = false
    )
    {
        token ui:displayGroup = "Material Graphs"
        token ui:displayName = "_103_0001_0008"
        int ui:order = 1024
        float3 xformOp:rotateXYZ = (0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def Mesh "_103_0001_09" (
            kind = "model"
        )
        {
            double3 diagonalInertia = (0.00006800108402967452, 0.0000913921371102333, 0.00006800108402967452)
            float3[] extent = [(-0.37772956, -0.4, -0.8222705), (0.8222705, 0.4, 0.37772956)]
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [7, 9, 8, 7, 10, 9, 6, 11, 10, 6, 10, 7, 5, 12, 11, 5, 11, 6, 4, 13, 12, 4, 12, 5, 3, 14, 13, 3, 13, 4, 2, 15, 14, 2, 14, 3, 1, 0, 15, 1, 15, 2, 19, 25, 18, 19, 26, 25, 20, 27, 26, 20, 26, 19, 21, 28, 27, 21, 27, 20, 22, 29, 28, 22, 28, 21, 23, 30, 29, 23, 29, 22, 24, 31, 30, 24, 30, 23, 17, 16, 31, 17, 31, 24, 49, 33, 48, 47, 48, 33, 36, 33, 49, 46, 47, 33, 35, 36, 37, 35, 33, 36, 38, 35, 37, 32, 44, 45, 32, 45, 46, 32, 46, 33, 39, 35, 38, 43, 44, 32, 40, 35, 39, 34, 40, 41, 34, 41, 42, 34, 42, 43, 34, 43, 32, 34, 35, 40, 62, 63, 53, 64, 53, 63, 61, 62, 53, 65, 53, 64, 52, 60, 61, 52, 61, 53, 59, 60, 52, 58, 59, 52, 57, 58, 52, 51, 65, 66, 51, 66, 67, 51, 67, 54, 51, 53, 65, 50, 54, 55, 50, 55, 56, 50, 56, 57, 50, 51, 54, 50, 57, 52, 73, 74, 71, 75, 71, 74, 72, 73, 71, 76, 71, 75, 70, 85, 72, 70, 72, 71, 84, 85, 70, 69, 76, 77, 69, 77, 78, 69, 71, 76, 83, 84, 70, 79, 69, 78, 82, 83, 70, 68, 79, 80, 68, 80, 81, 68, 81, 82, 68, 69, 79, 68, 82, 70, 88, 87, 86, 88, 89, 87, 102, 91, 103, 104, 103, 91, 101, 91, 102, 105, 104, 91, 93, 101, 100, 93, 91, 101, 99, 93, 100, 98, 93, 99, 97, 93, 98, 90, 106, 105, 90, 107, 106, 90, 94, 107, 90, 105, 91, 92, 95, 94, 92, 96, 95, 92, 97, 96, 92, 94, 90, 92, 93, 97, 108, 111, 110, 108, 109, 111, 112, 114, 115, 116, 112, 115, 117, 113, 112, 117, 112, 116, 118, 120, 119, 121, 120, 118, 122, 118, 123, 122, 121, 118, 125, 132, 124, 125, 133, 132, 126, 134, 133, 126, 133, 125, 127, 135, 134, 127, 134, 126, 128, 136, 135, 128, 135, 127, 129, 137, 136, 129, 136, 128, 130, 138, 137, 130, 137, 129, 131, 139, 138, 131, 138, 130, 146, 148, 147, 146, 149, 148, 145, 150, 149, 145, 149, 146, 144, 151, 150, 144, 150, 145, 143, 152, 151, 143, 151, 144, 142, 153, 152, 142, 152, 143, 141, 154, 153, 141, 153, 142, 140, 155, 154, 140, 154, 141]
            double[] inertiaDiagonalMatrix = [0.00006800108402967452, -6.938893903907229e-21, 0.0000913921371102333, -0.000023451851680874825, 6.938893903907229e-21, 0.00006800108402967452]
            double mass = 0.0003671681582927704
            rel material:binding = </Root/_103_0001_0008/Looks/Aluminum_Anodized> (
                bindMaterialAs = "weakerThanDescendants"
            )
            normal3f[] normals = [(-1, 2.4492937e-16, 3.996803e-15), (-1, 2.4492937e-16, 3.996803e-15), (-0.90096885, 0.43388373, 3.600995e-15), (-0.6234898, 0.7818315, 2.4919658e-15), (-0.22252093, 0.9749279, 8.893723e-16), (0.22252093, 0.9749279, -8.893723e-16), (0.6234898, 0.7818315, -2.4919658e-15), (0.90096885, 0.43388373, -3.600995e-15), (1, -1.2246469e-16, -3.996803e-15), (1, -1.2246469e-16, -3.996803e-15), (0.90096885, 0.43388373, -3.600995e-15), (0.6234898, 0.7818315, -2.4919658e-15), (0.22252093, 0.9749279, -8.893723e-16), (-0.22252093, 0.9749279, 8.893723e-16), (-0.6234898, 0.7818315, 2.4919658e-15), (-0.90096885, 0.43388373, 3.600995e-15), (-0, 2.4492937e-16, -1), (-0, 2.4492937e-16, -1), (-0, -1.2246469e-16, 1), (-0, 0.43388373, 0.90096885), (-0, 0.7818315, 0.6234898), (-0, 0.9749279, 0.22252093), (-0, 0.9749279, -0.22252093), (-0, 0.7818315, -0.6234898), (-0, 0.43388373, -0.90096885), (-0, -1.2246469e-16, 1), (-0, 0.43388373, 0.90096885), (-0, 0.7818315, 0.6234898), (-0, 0.9749279, 0.22252093), (-0, 0.9749279, -0.22252093), (-0, 0.7818315, -0.6234898), (-0, 0.43388373, -0.90096885), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (-4.047688e-15, 0, -1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (4.047688e-15, -0, 1), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (1, -0, 1.0842022e-16), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, -0, -2.7755576e-15), (1, -0, -2.7755576e-15), (1, -0, -2.7755576e-15), (1, -0, -2.7755576e-15), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (-0, -1, 0), (0, -0, -1), (0, -0.43388373, -0.90096885), (0, -0.7818315, -0.6234898), (0, -0.9749279, -0.22252093), (-0, -0.9749279, 0.22252093), (-0, -0.7818315, 0.6234898), (-0, -0.43388373, 0.90096885), (-0, -1.2246469e-16, 1), (0, -0, -1), (0, -0.43388373, -0.90096885), (0, -0.7818315, -0.6234898), (0, -0.9749279, -0.22252093), (-0, -0.9749279, 0.22252093), (-0, -0.7818315, 0.6234898), (-0, -0.43388373, 0.90096885), (-0, -1.2246469e-16, 1), (1, -1.2246469e-16, -3.996803e-15), (0.90096885, -0.43388373, -3.600995e-15), (0.6234898, -0.7818315, -2.4919658e-15), (0.22252093, -0.9749279, -8.893723e-16), (-0.22252093, -0.9749279, 8.893723e-16), (-0.6234898, -0.7818315, 2.4919658e-15), (-0.90096885, -0.43388373, 3.600995e-15), (-1, -0, 3.996803e-15), (-1, -0, 3.996803e-15), (-0.90096885, -0.43388373, 3.600995e-15), (-0.6234898, -0.7818315, 2.4919658e-15), (-0.22252093, -0.9749279, 8.893723e-16), (0.22252093, -0.9749279, -8.893723e-16), (0.6234898, -0.7818315, -2.4919658e-15), (0.90096885, -0.43388373, -3.600995e-15), (1, -1.2246469e-16, -3.996803e-15)]
            point3f[] points = [(0.62227046, 0, 0.12772956), (0.62227046, 0, 0.37772956), (0.6024642, -0.08677676, 0.37772956), (0.54696834, -0.1563663, 0.37772956), (0.4667746, -0.19498558, 0.37772956), (0.37776622, -0.19498558, 0.37772956), (0.29757246, -0.1563663, 0.37772956), (0.24207667, -0.08677676, 0.37772956), (0.22227046, 0, 0.37772956), (0.22227046, 0, 0.12772956), (0.24207667, -0.08677676, 0.12772956), (0.29757246, -0.1563663, 0.12772956), (0.37776622, -0.19498558, 0.12772956), (0.4667746, -0.19498558, 0.12772956), (0.54696834, -0.1563663, 0.12772956), (0.6024642, -0.08677676, 0.12772956), (-0.12772956, 0, -0.22227046), (-0.37772956, 0, -0.22227046), (-0.37772956, 0, -0.62227046), (-0.37772956, -0.08677676, -0.6024642), (-0.37772956, -0.1563663, -0.54696834), (-0.37772956, -0.19498558, -0.4667746), (-0.37772956, -0.19498558, -0.37776622), (-0.37772956, -0.1563663, -0.29757246), (-0.37772956, -0.08677676, -0.24207667), (-0.12772956, 0, -0.62227046), (-0.12772956, -0.08677676, -0.6024642), (-0.12772956, -0.1563663, -0.54696834), (-0.12772956, -0.19498558, -0.4667746), (-0.12772956, -0.19498558, -0.37776622), (-0.12772956, -0.1563663, -0.29757246), (-0.12772956, -0.08677676, -0.24207667), (-0.12772956, -0.4, 0.12772956), (0.8222705, -0.4, 0.12772956), (-0.12772956, 0.4, 0.12772956), (0.8222705, 0.4, 0.12772956), (0.62227046, 0, 0.12772956), (0.6024642, 0.08677673, 0.12772956), (0.54696834, 0.15636632, 0.12772956), (0.4667746, 0.1949856, 0.12772956), (0.37776622, 0.1949856, 0.12772956), (0.29757246, 0.15636632, 0.12772956), (0.24207667, 0.08677673, 0.12772956), (0.22227046, 0, 0.12772956), (0.24207667, -0.08677676, 0.12772956), (0.29757246, -0.1563663, 0.12772956), (0.37776622, -0.19498558, 0.12772956), (0.4667746, -0.19498558, 0.12772956), (0.54696834, -0.1563663, 0.12772956), (0.6024642, -0.08677676, 0.12772956), (-0.37772956, 0.4, 0.37772956), (-0.37772956, -0.4, 0.37772956), (0.8222705, 0.4, 0.37772956), (0.8222705, -0.4, 0.37772956), (0.22227046, 0, 0.37772956), (0.24207667, 0.08677673, 0.37772956), (0.29757246, 0.15636632, 0.37772956), (0.37776622, 0.1949856, 0.37772956), (0.4667746, 0.1949856, 0.37772956), (0.54696834, 0.15636632, 0.37772956), (0.6024642, 0.08677673, 0.37772956), (0.62227046, 0, 0.37772956), (0.6024642, -0.08677676, 0.37772956), (0.54696834, -0.1563663, 0.37772956), (0.4667746, -0.19498558, 0.37772956), (0.37776622, -0.19498558, 0.37772956), (0.29757246, -0.1563663, 0.37772956), (0.24207667, -0.08677676, 0.37772956), (-0.12772956, 0.4, 0.12772956), (-0.12772956, -0.4, 0.12772956), (-0.12772956, 0.4, -0.8222705), (-0.12772956, -0.4, -0.8222705), (-0.12772956, 0, -0.62227046), (-0.12772956, -0.08677676, -0.6024642), (-0.12772956, -0.1563663, -0.54696834), (-0.12772956, -0.19498558, -0.4667746), (-0.12772956, -0.19498558, -0.37776622), (-0.12772956, -0.1563663, -0.29757246), (-0.12772956, -0.08677676, -0.24207667), (-0.12772956, 0, -0.22227046), (-0.12772956, 0.08677673, -0.24207667), (-0.12772956, 0.15636632, -0.29757246), (-0.12772956, 0.1949856, -0.37776622), (-0.12772956, 0.1949856, -0.4667746), (-0.12772956, 0.15636632, -0.54696834), (-0.12772956, 0.08677673, -0.6024642), (-0.37772956, -0.4, -0.8222705), (-0.12772956, -0.4, -0.8222705), (-0.37772956, 0.4, -0.8222705), (-0.12772956, 0.4, -0.8222705), (-0.37772956, -0.4, 0.37772956), (-0.37772956, -0.4, -0.8222705), (-0.37772956, 0.4, 0.37772956), (-0.37772956, 0.4, -0.8222705), (-0.37772956, 0, -0.22227046), (-0.37772956, 0.08677673, -0.24207667), (-0.37772956, 0.15636632, -0.29757246), (-0.37772956, 0.1949856, -0.37776622), (-0.37772956, 0.1949856, -0.4667746), (-0.37772956, 0.15636632, -0.54696834), (-0.37772956, 0.08677673, -0.6024642), (-0.37772956, 0, -0.62227046), (-0.37772956, -0.08677676, -0.6024642), (-0.37772956, -0.1563663, -0.54696834), (-0.37772956, -0.19498558, -0.4667746), (-0.37772956, -0.19498558, -0.37776622), (-0.37772956, -0.1563663, -0.29757246), (-0.37772956, -0.08677676, -0.24207667), (0.8222705, 0.4, 0.37772956), (0.8222705, -0.4, 0.37772956), (0.8222705, 0.4, 0.12772956), (0.8222705, -0.4, 0.12772956), (-0.12772956, 0.4, 0.12772956), (0.8222705, 0.4, 0.12772956), (-0.12772956, 0.4, -0.8222705), (-0.37772956, 0.4, -0.8222705), (-0.37772956, 0.4, 0.37772956), (0.8222705, 0.4, 0.37772956), (-0.12772956, -0.4, 0.12772956), (-0.12772956, -0.4, -0.8222705), (-0.37772956, -0.4, -0.8222705), (-0.37772956, -0.4, 0.37772956), (0.8222705, -0.4, 0.37772956), (0.8222705, -0.4, 0.12772956), (-0.37772956, 0, -0.22227046), (-0.37772956, 0.08677673, -0.24207667), (-0.37772956, 0.15636632, -0.29757246), (-0.37772956, 0.1949856, -0.37776622), (-0.37772956, 0.1949856, -0.4667746), (-0.37772956, 0.15636632, -0.54696834), (-0.37772956, 0.08677673, -0.6024642), (-0.37772956, 0, -0.62227046), (-0.12772956, 0, -0.22227046), (-0.12772956, 0.08677673, -0.24207667), (-0.12772956, 0.15636632, -0.29757246), (-0.12772956, 0.1949856, -0.37776622), (-0.12772956, 0.1949856, -0.4667746), (-0.12772956, 0.15636632, -0.54696834), (-0.12772956, 0.08677673, -0.6024642), (-0.12772956, 0, -0.62227046), (0.22227046, 0, 0.37772956), (0.24207667, 0.08677673, 0.37772956), (0.29757246, 0.15636632, 0.37772956), (0.37776622, 0.1949856, 0.37772956), (0.4667746, 0.1949856, 0.37772956), (0.54696834, 0.15636632, 0.37772956), (0.6024642, 0.08677673, 0.37772956), (0.62227046, 0, 0.37772956), (0.62227046, 0, 0.12772956), (0.6024642, 0.08677673, 0.12772956), (0.54696834, 0.15636632, 0.12772956), (0.4667746, 0.1949856, 0.12772956), (0.37776622, 0.1949856, 0.12772956), (0.29757246, 0.15636632, 0.12772956), (0.24207667, 0.08677673, 0.12772956), (0.22227046, 0, 0.12772956)]
            bool primvars:doNotCastShadows = 0
            texCoord2f[] primvars:st = [(-0.06283186, 0.0095), (-0.06283186, 0.012), (-0.058343865, 0.012), (-0.053855874, 0.012), (-0.049367886, 0.012), (-0.044879895, 0.012), (-0.040391907, 0.012), (-0.035903916, 0.012), (-0.03141593, 0.012), (-0.03141593, 0.0095), (-0.035903916, 0.0095), (-0.040391907, 0.0095), (-0.044879895, 0.0095), (-0.049367886, 0.0095), (-0.053855874, 0.0095), (-0.058343865, 0.0095), (-0.06283186, 0.0095), (-0.06283186, 0.012), (-0.03141593, 0.012), (-0.035903916, 0.012), (-0.040391907, 0.012), (-0.044879895, 0.012), (-0.049367886, 0.012), (-0.053855874, 0.012), (-0.058343865, 0.012), (-0.03141593, 0.0095), (-0.035903916, 0.0095), (-0.040391907, 0.0095), (-0.044879895, 0.0095), (-0.049367886, 0.0095), (-0.053855874, 0.0095), (-0.058343865, 0.0095), (-0.0025, -0.008), (-0.012, -0.008), (-0.0025, 0), (-0.012, 0), (-0.01, -0.004), (-0.009801938, -0.0031322325), (-0.00924698, -0.002436337), (-0.008445042, -0.0020501441), (-0.007554958, -0.0020501441), (-0.0067530205, -0.002436337), (-0.006198062, -0.0031322325), (-0.006, -0.004), (-0.006198062, -0.0048677674), (-0.0067530205, -0.005563663), (-0.007554958, -0.005949856), (-0.008445042, -0.005949856), (-0.00924698, -0.005563663), (-0.009801938, -0.0048677674), (-0, 0), (-0, -0.008), (0.012, 0), (0.012, -0.008), (0.006, -0.004), (0.006198062, -0.0031322325), (0.0067530205, -0.002436337), (0.007554958, -0.0020501441), (0.008445042, -0.0020501441), (0.00924698, -0.002436337), (0.009801938, -0.0031322325), (0.01, -0.004), (0.009801938, -0.0048677674), (0.00924698, -0.005563663), (0.008445042, -0.005949856), (0.007554958, -0.005949856), (0.0067530205, -0.005563663), (0.006198062, -0.0048677674), (0.0025, 0), (0.0025, -0.008), (0.012, 0), (0.012, -0.008), (0.01, -0.004), (0.009801938, -0.0048677674), (0.00924698, -0.005563663), (0.008445042, -0.005949856), (0.007554958, -0.005949856), (0.0067530205, -0.005563663), (0.006198062, -0.0048677674), (0.006, -0.004), (0.006198062, -0.0031322325), (0.0067530205, -0.002436337), (0.007554958, -0.0020501441), (0.008445042, -0.0020501441), (0.00924698, -0.002436337), (0.009801938, -0.0031322325), (0, -0.008), (-0.0025, -0.008), (0, 0), (-0.0025, 0), (0, -0.008), (-0.012, -0.008), (0, 0), (-0.012, 0), (-0.006, -0.004), (-0.006198062, -0.0031322325), (-0.0067530205, -0.002436337), (-0.007554958, -0.0020501441), (-0.008445042, -0.0020501441), (-0.00924698, -0.002436337), (-0.009801938, -0.0031322325), (-0.01, -0.004), (-0.009801938, -0.0048677674), (-0.00924698, -0.005563663), (-0.008445042, -0.005949856), (-0.007554958, -0.005949856), (-0.0067530205, -0.005563663), (-0.006198062, -0.0048677674), (1.5265567e-17, 0), (1.5265567e-17, -0.008), (0.0025, 0), (0.0025, -0.008), (-0.0025, 0.0025), (-0.0025, 0.012), (-0.012, 0.0025), (-0.012, 0), (0, 0), (-4.8849813e-17, 0.012), (0.0025, 0.0025), (0.012, 0.0025), (0.012, 0), (-0, 0), (4.8849813e-17, 0.012), (0.0025, 0.012), (-0, 0.012), (-0.0044879895, 0.012), (-0.008975979, 0.012), (-0.013463968, 0.012), (-0.017951958, 0.012), (-0.022439947, 0.012), (-0.026927937, 0.012), (-0.03141593, 0.012), (-0, 0.0095), (-0.0044879895, 0.0095), (-0.008975979, 0.0095), (-0.013463968, 0.0095), (-0.017951958, 0.0095), (-0.022439947, 0.0095), (-0.026927937, 0.0095), (-0.03141593, 0.0095), (-0.03141593, 0.012), (-0.026927937, 0.012), (-0.022439947, 0.012), (-0.017951958, 0.012), (-0.013463968, 0.012), (-0.008975979, 0.012), (-0.0044879895, 0.012), (-0, 0.012), (-0, 0.0095), (-0.0044879895, 0.0095), (-0.008975979, 0.0095), (-0.013463968, 0.0095), (-0.017951958, 0.0095), (-0.022439947, 0.0095), (-0.026927937, 0.0095), (-0.03141593, 0.0095)] (
                interpolation = "varying"
            )
            uniform token subdivisionScheme = "none"
            token triangleSubdivisionRule = "smooth"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.3777295649051666, 0.4000000059604645, -0.3777295649051666, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Scope "Looks"
        {
            def Material "Aluminum_Anodized"
            {
                token outputs:mdl:displacement.connect = </Root/_103_0001_0008/Looks/Aluminum_Anodized/Shader.outputs:out>
                token outputs:mdl:surface.connect = </Root/_103_0001_0008/Looks/Aluminum_Anodized/Shader.outputs:out>
                token outputs:mdl:volume.connect = </Root/_103_0001_0008/Looks/Aluminum_Anodized/Shader.outputs:out>

                def Shader "Shader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:mdl:sourceAsset = @http://omniverse-content-production.s3-us-west-2.amazonaws.com/Materials/Base/Metals/Aluminum_Anodized.mdl@
                    uniform token info:mdl:sourceAsset:subIdentifier = "Aluminum_Anodized"
                    bool inputs:excludeFromWhiteMode = 0 (
                        customData = {
                            bool default = 0
                        }
                        displayGroup = "Material Flags"
                        displayName = "Exclude from White Mode"
                        hidden = false
                    )
                    token outputs:out
                }
            }
        }
    }
}

def Camera "OmniverseKit_Persp" (
    hide_in_stage_window = true
    kind = "component"
    no_delete = true
)
{
    float4[] clippingPlanes = []
    float2 clippingRange = (1, 10000000)
    float focalLength = 18.147562
    float focusDistance = 0
    float fStop = 0
    float horizontalAperture = 20.955
    float horizontalApertureOffset = 0
    custom uniform vector3d omni:kit:centerOfInterest = (0, 0, -3.092445887032494)
    token projection = "perspective"
    float verticalAperture = 15.2908
    float verticalApertureOffset = 0
    double3 xformOp:rotateYXZ = (-24.094842552110705, 50.76847951640779, 26.565051177078026)
    double3 xformOp:scale = (0.9999999999999999, 0.9999999999999999, 0.9999999999999997)
    double3 xformOp:translate = (2.3854245040755804, 2.185424471293027, 1.185424426589541)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYXZ", "xformOp:scale"]
}

def Camera "OmniverseKit_Front" (
    hide_in_stage_window = true
    kind = "component"
    no_delete = true
)
{
    float4[] clippingPlanes = []
    float2 clippingRange = (20000, 10000000)
    float focalLength = 50
    float focusDistance = 0
    float fStop = 0
    float horizontalAperture = 5000
    float horizontalApertureOffset = 0
    custom uniform vector3d omni:kit:centerOfInterest = (0, 0, -50000)
    token projection = "orthographic"
    float verticalAperture = 3648.4849
    float verticalApertureOffset = 0
    double3 xformOp:rotateYXZ = (0, -0, -0)
    double3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (0, 0, 50000)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYXZ", "xformOp:scale"]
}

def Camera "OmniverseKit_Top" (
    hide_in_stage_window = true
    kind = "component"
    no_delete = true
)
{
    float4[] clippingPlanes = []
    float2 clippingRange = (20000, 10000000)
    float focalLength = 50
    float focusDistance = 0
    float fStop = 0
    float horizontalAperture = 5000
    float horizontalApertureOffset = 0
    custom uniform vector3d omni:kit:centerOfInterest = (0, 0, -50000.80000001192)
    token projection = "orthographic"
    float verticalAperture = 3648.4849
    float verticalApertureOffset = 0
    double3 xformOp:rotateYXZ = (89.99999999999999, -0, -180)
    double3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (-4.329849557662997e-12, 50000.80000001192, 1.1102407881938152e-11)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYXZ", "xformOp:scale"]
}

def Camera "OmniverseKit_Right" (
    hide_in_stage_window = true
    kind = "component"
    no_delete = true
)
{
    float4[] clippingPlanes = []
    float2 clippingRange = (20000, 10000000)
    float focalLength = 50
    float focusDistance = 0
    float fStop = 0
    float horizontalAperture = 5000
    float horizontalApertureOffset = 0
    custom uniform vector3d omni:kit:centerOfInterest = (0, 0, -50000)
    token projection = "orthographic"
    float verticalAperture = 3648.4849
    float verticalApertureOffset = 0
    double3 xformOp:rotateYXZ = (0, -90.00000000000001, -0)
    double3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (-50000, 0, -1.1102230246251565e-11)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateYXZ", "xformOp:scale"]
}

def "Render" (
    hide_in_stage_window = true
    no_delete = true
)
{
    def RenderProduct "RenderProduct_Viewport" (
        hide_in_stage_window = true
        no_delete = true
    )
    {
        rel camera = </OmniverseKit_Persp>
        custom double farPlaneOverride = 0
        custom double nearPlaneOverride = 0
        rel orderedVars = </Render/Vars/LdrColor>
        custom bool overrideClipRange = 0
        uniform int2 resolution = (1280, 720)
        custom uint64 viewPickingId = 2586990116035400011
        custom int viewportHandle = 0
    }

    def "Vars"
    {
        def RenderVar "LdrColor" (
            hide_in_stage_window = true
            no_delete = true
        )
        {
            uniform string sourceName = "LdrColor"
        }
    }
}

